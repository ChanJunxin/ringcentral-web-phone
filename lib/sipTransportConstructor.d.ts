import { UA, Transport } from 'sip.js';
export interface WebPhoneSIPTransport extends Transport {
    computeRandomTimeout: typeof computeRandomTimeout;
    reconnect: typeof reconnect;
    isSipErrorCode: typeof isSipErrorCode;
    scheduleSwitchBackMainProxy: typeof scheduleSwitchBackMainProxy;
    onSipErrorCode: typeof onSipErrorCode;
    reconnectionAttempts?: number;
    logger: typeof UA.prototype.logger;
    switchBackInterval?: number;
    getNextWsServer: any;
    noAvailableServers: any;
    status: number;
    resetServerErrorStatus: any;
    configuration: typeof UA.prototype.configuration.transportOptions;
    nextReconnectInterval: number;
    sipErrorCodes?: string[];
    __isCurrentMainProxy: typeof __isCurrentMainProxy;
    __onConnectedToMain: typeof __onConnectedToMain;
    __onConnectedToBackup: typeof __onConnectedToBackup;
    __clearSwitchBackTimer: typeof __clearSwitchBackTimer;
    __connect: typeof Transport.prototype.connect;
    connect: typeof __connect;
    reconnectTimer: any;
    disposeWs: () => void;
    onError: (e: any) => void;
    mainProxy: any;
}
export declare const TransportConstructorWrapper: (SipTransportConstructor: any, webPhoneOptions: any) => any;
declare var computeRandomTimeout: (reconnectionAttempts?: number, randomMinInterval?: number, randomMaxInterval?: number) => number;
declare function __connect(this: WebPhoneSIPTransport, options?: any): Promise<void>;
declare function reconnect(this: WebPhoneSIPTransport, forceReconnectToMain?: boolean): Promise<void>;
declare function isSipErrorCode(this: WebPhoneSIPTransport, message: string): boolean;
declare function scheduleSwitchBackMainProxy(this: WebPhoneSIPTransport): void;
declare function onSipErrorCode(this: WebPhoneSIPTransport): Promise<any>;
declare function __isCurrentMainProxy(this: WebPhoneSIPTransport): boolean;
declare function __clearSwitchBackTimer(this: WebPhoneSIPTransport): void;
declare function __onConnectedToMain(this: WebPhoneSIPTransport): void;
declare function __onConnectedToBackup(this: WebPhoneSIPTransport): void;
export {};
